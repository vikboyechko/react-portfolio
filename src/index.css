/* Setting the reusable color values */
:root {
  --primary-color: #92ccce;
  --secondary-color: #31343d;
  --background-color: #eeeef7;
  --body-font-color: #445877;
}

/* need to reset some built-in spacing values */
body {
  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
  color: var(--body-font-color);
  width: 100%;
  height: 100%;
}

body,
h1,
li,
ul {
  margin: 0;
}

h3 {
  border-bottom: 4px solid var(--body-font-color);
  padding-bottom: 9px;
  margin: 15px 0 5px 0;
  font-size: 1.4rem;
}

h4 {
  font-size: 1.3rem;
  margin: 0;
  padding: 0;
}

a {
  color: var(--body-font-color);
}

ul {
  list-style-type: none;
  padding: 0;
}

li a {
  text-underline-offset: 4px;
  text-decoration-thickness: 2.5px;
}

p {
  margin-bottom: 1rem;
}

/* images go off the page if this isn't set */
img {
  width: 100%;
  /* min-height: 100%; */
}

/* using flexbox so we can more easily move elements on different displays */
nav {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
}

.nav-link-active {
  color: var(--primary-color);
}

.title-item {
  background-color: var(--primary-color);
  color: var(--secondary-color);
  width: 100%;
  text-align: center;
  padding: 5px 0;
  font-weight: 600;
}

.menu {
  background-color: var(--secondary-color);
}

/* combining multiple selectors */
.menu a,
.menu ul {
  color: var(--primary-color);
  padding: 5px;
  text-align: center;
}

.menu li {
  display: inline-flex;
  font-weight: 600;
}

/* increases thickness of the link underline */
.menu li a {
  text-align: center;
  text-underline-offset: 4px;
  text-decoration-thickness: 2.5px;
}

/* setting image, overlay, and a flex container all at once */
#hero {
  background-image: url("../src/assets/images/hero-bg.jpg");
  background-size: cover;
  background-color: rgba(118, 109, 156, 0.688);
  background-blend-mode: soft-light;
  display: flex;
  min-height: 10rem;
  justify-content: center;
}

#hero h2 {
  background-color: var(--primary-color);
  color: var(--secondary-color);
  align-self: end;
  width: 14rem;
  text-align: center;
}

/* Global section background and font color */

section {
  padding: 15px;
  background-color: var(--background-color);
  color: var(--body-font-color);
}

section p {
  line-height: 1.4em;
}

/* setting up the work grid container with a minmax and gap */
.work {
  display: grid;
  grid-template-columns: minmax(180px, 1fr);
  grid-template-rows: auto;
  gap: 20px;
  position: relative;
}

/* and now the child grid item */
.work-item {
  max-height: 200px;
  border: 4px solid var(--primary-color);
  position: relative;
  overflow: hidden;
}

/* on image hover, the brightness decreases */
.work-item img:hover {
  filter: brightness(0.4);
}

/* since we set the parent as relative position, we can set the individual project title to absolute */
.work-item-title {
  background-color: var(--primary-color);
  color: var(--secondary-color);
  position: absolute;
  bottom: 40px;
  padding: 1px 15px 20px 5px;
  z-index: 3;
}

.work-item-title h4 {
  margin-bottom: -10px;
  padding-top: 10px;
}

.work-item-title p {
  font-size: .8rem;
}



/* since we're mobile first, now we set the changes to a wider view */
@media only screen and (min-width: 500px) {
  h1 {
    font-size: 250%;
  }

  .title-item {
    text-align: center;
  }

  #hero {
    justify-content: end;
    padding-right: 20px;
  }

  /* set the parent grid to 2 columns */
  .work {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto;
  }

  /* the first work item will span 2 columns */
  .work-item:first-of-type {
    grid-column: 1 / span 2;
    min-height: 300px;
  }

  h3 {
    font-size: 2.5rem;
  }

  li {
    display: inline;
    padding-left: 15px;
    padding-right: 30px;
  }

}

/* settings for the widest display */
@media only screen and (min-width: 800px) {

  nav {
    justify-content: space-between;
    align-items: center;
    flex-wrap: nowrap;
  }

  .title-item {
    height: 50%;
    margin: .5rem 0;
    text-align: left;
    padding-left: 4rem;
    padding-right: 1rem;
    width: 35%;
  }

  .menu ul {
    padding-right: 3em;
  }

  #hero h2 {
    margin-right: 2rem;
    padding: 0;
  }

  /* grid container for the work section is different */
  .work {
    display: grid;
    grid-template-columns: 10% 36% 36% 10%;
    gap: 2rem;
  }

  /* the first work section item spans two columns */
  .work-item:first-of-type {
    grid-row: 1;
    grid-column: 2 / span 2;
  }

  /* the rest of the work section items are side by side */
  .work-item:nth-of-type(2) {
    grid-row: 2;
    grid-column: 2 / 3;
  }

  .work-item:nth-of-type(3) {
    grid-row: 2;
    grid-column: 3 / 4;
  }

  .work-item:nth-of-type(4) {
    grid-row: 3;
    grid-column: 2 / 3;
  }

  .work-item:nth-of-type(5) {
    grid-row: 3;
    grid-column: 3 / 4;
  }

  .work-item:nth-of-type(6) {
    grid-row: 4;
    grid-column: 2 / 3;
  }

  .work-item:nth-of-type(7) {
    grid-row: 4;
    grid-column: 3 / 4;
  }

}

.resume-list {
  line-height: 1.8rem;
  margin-bottom: 25px;
}

.resume-list li {
  display: inline-block;
  padding: 1px 10px;
  background-color: var(--primary-color);
  margin: 5px;
  border-radius: 5px;
  break-inside: avoid;
}

.resume-list li:hover {
  background-color: var(--secondary-color);
  color: var(--primary-color);
}

/* On hover of project card, see more details */

.work-item-overlay {
  padding: 20px;
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  opacity: 0;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 10;
  background-color: rgba(0, 0, 0, 0.8);
}

.work-item-overlay .hover-text {
  font-weight: 600;
}

/* Hide the text and link by default */
.work-item-overlay .hover-link,
.work-item-overlay .hover-text {
  display: none;
  padding: 5px;
  color: white;
}

/* Show the overlay when the work-item is hovered */
.work-item:hover .work-item-overlay {
  opacity: 1;
}

.work-item:hover .work-item-overlay .hover-text,
.work-item:hover .work-item-overlay .hover-link {
  display: block;
  text-align: center;
}